Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def sortedArrayToBST(self, num):
        if len(num)==0:
            return None
        if len(num)==1:
            return TreeNode(num[0])
        mid=len(num)/2
        root=TreeNode(num[mid])
        root.left=self.sortedArrayToBST(num[:mid])
        root.right=self.sortedArrayToBST(num[mid+1:])
        return root
