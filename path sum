Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

Note: A leaf is a node with no children.


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def hasPathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """
        if root is None:
            return False
        res=[]
        if root.left==None and root.right==None:
            if root.val==sum:
                res.append(root.val)
                return True
            else:
                return False
        if self.hasPathSum(root.left,sum-root.val):
            res.append(root.val)
            return True
        if self.hasPathSum(root.right,sum-root.val):
            res.append(root.val)
            return True
        return False
