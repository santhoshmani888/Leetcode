Given a linked list, rotate the list to the right by k places, where k is non-negative.
Example 1:

Input: 1->2->3->4->5->NULL, k = 2
Output: 4->5->1->2->3->NULL
Explanation:
rotate 1 steps to the right: 5->1->2->3->4->NULL
rotate 2 steps to the right: 4->5->1->2->3->NULL


class Solution(object):
   
    def rotateRight(self, head, k):
        if not head or not head.next:
            return head
        current = head
        length = 1

        while current.next:
            current = current.next
            length += 1

        current.next = head
        k = k % length

        for i in range(length-k):
            current = current.next
        head = current.next
        current.next = None
        return head
